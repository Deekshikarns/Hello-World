#include<stdio.h>
#include<stdlib.h>
#define max_size 10
void insert_CQ(int Q[max_size],int *rear,int *count,int elem)
{  
  if(*count==max_size) 
   {    
    printf("no elements in circular queues\n");    
    return; 
   } 
   *rear=((*rear)+1)%max_size;  
  Q[*rear]=elem;   
 printf("inserted elem in%d\n",elem); 
   (*count)++;
}
void delete_CQ(int Q[max_size],int *front,int *count)
{    
Int elem;    
if(*count==0)  
  {       
 printf("no elements in circular queue\n");    
    return;    
}    
elem=Q[*front];   
 *front=((*front)+1)%max_size;
    (*count)--;   
 printf("deleted elem in %d\n",elem);
}
void display_CQ(int Q[max_size],int front,int count)
{ 
   int i; 
   if(count==0)  
  {  
      printf("no elements in circular queue\n"); 
       return; 
   } 
   printf("elements in circular queue\n");    for(i=front;count!=0;i=(i+1)%max_size,count--)    printf("%d\n",Q[i]);
}
int main()
{
    int Q[max_size],elem,count=0,rear=max_size-1,front=0,ch;   
 while(1)  
  {    
    printf("enter 1.insert_CQ\t 2.delete_CQ\t 3.display_CQ\t 4.exit\n");        scanf("%d",&ch);     
   switch(ch) 
       {      
      case 1: printf("enter the element\n");   
                 scanf("%d",&elem);        
            insert_CQ(Q,&rear,&count,elem);       
             break;   
         case 2:          
         delete_CQ(Q,&front,&count);      
             break;     
       case 3:     
              display_CQ(Q,front,count);                   break;       
     default:         
          exit(0);    
    }
    }
}
