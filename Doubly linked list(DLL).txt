#include<stdio.h>
#include<stdlib.h>
struct node
{
    int info;
    struct node* rlink;
    struct node* llink;
};
typedef struct node* NODE;
NODE getnode()
{
    NODE x;
    x=(NODE)malloc(sizeof(struct node));
    if(x==NULL)
    {
        printf("Memory not allocated\n");
        exit(0);
    }
    return x;
}
NODE insert_front(NODE first,int elem)
{
    NODE temp;
    temp=getnode();
    temp->info=elem;
    temp->llink=temp->rlink=NULL;
    if(first==NULL)
        return temp;
    temp->rlink=first;
    first->llink=temp;
    return temp;
}
NODE insert_rear(NODE first,int elem)
{
    NODE temp,cur;
    temp=getnode();
    temp->info=elem;
    temp->llink=temp->rlink=NULL;
    if(first==NULL)
        return temp;
    cur=first;
    while(cur->rlink!=NULL)
    cur=cur->rlink;
    cur->rlink=temp;
    temp->llink=cur;
    return first;
}
NODE delete_front(NODE first)
{
    NODE next;
    if(first==NULL)
    {
        printf("no elements ");
        return first;
    }
    if(first->rlink==NULL)
    {
        printf("deleted %d",first->info);
        free(first);
        return NULL;
    }
    next=first->rlink;
    next->llink=NULL;
    printf("deleted %d\n",first->info);
        free(first);
        return next;
}
NODE delete_rear(NODE first)
{
    NODE prev,cur;
    if(first==NULL)
    {
        printf("no elements \n");
        return first;
    }
    if(first->rlink==NULL)
    {
        printf("deleted %d\n",first->info);
        free(first);
        return NULL;
    }
    prev=NULL;
    cur=first;
    while(cur->rlink!=NULL)
    {
        prev=cur;
        cur=cur->rlink;
    }
    prev->rlink=NULL;
    printf("deleted %d\n",cur->info);
    free(cur);
    return first;
}
void display(NODE first)
{
    if(first==NULL)
    {
        printf("no elements n");
        return;
    }
    NODE cur;
    cur=first;
    printf("elements are:\n");
    while(cur!=NULL)
    {
        printf("%d\n",cur->info);
        cur=cur->rlink;
    }
}
int main()
{
    NODE first=NULL;
    int ch,elem;
    while(1)
    {
        printf("Enter 1-insert front\t 2-insert rear\t 3-delete front\t 4-delete rear\t 5-display\t 6-to exit\n");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1: printf("Enter element :\n ");
            scanf("%d",&elem);
            first=insert_front(first,elem);
            break;
            case 2: printf("Enter element :\n ");
            scanf("%d",&elem);
            first=insert_rear(first,elem);
            break;
            case 3:first=delete_front(first);
            break;
            case 4:first=delete_rear(first);
            break;
            case 5:display(first);
            break;
            default: exit(0);
        }
    }
    return 0;
}